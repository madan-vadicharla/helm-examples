apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart1.fullname" . }}
  labels:
    {{- include "chart1.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart1.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart1.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart1.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-initdb
          image: busybox # alpine # docker.io/bitnami/postgresql:15.3.0-debian-11-47
          imagePullPolicy: IfNotPresent
          env:
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-master-password
                key: db-password
          command:
            - bash
            - -c
            - ls -al /etc/scripts/
            - /etc/scripts/script1.sh
          volumeMounts:
          - name: {{ .Chart.Name }}-scripts-volume
            mountPath: /etc/scripts
      volumes:
        - name: {{ .Chart.Name }}-scripts-volume
          configMap:
            name: {{ include "chart1.fullname" . }}-env
            defaultMode: 0777
            items:
            - key: script1.sh
              path: script1.sh
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
